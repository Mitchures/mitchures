@use "variables";

$grid-columns: 12;

.grid {
  display: flex;
  flex-direction: column;
  flex-flow: row wrap;
  > [class*="col-"] {
    display: block;
    padding: 1rem;
  }
}

@for $i from 1 through $grid-columns {
  .col-xs-#{$i} {
    flex-basis: calc($i / $grid-columns * 100%);
    max-width: calc($i / $grid-columns * 100%);
  }
}

@media (min-width: variables.$sm) {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      flex-basis: calc($i / $grid-columns * 100%);
      max-width: calc($i / $grid-columns * 100%);
    }
  }
}

@media (min-width: variables.$md) {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      flex-basis: calc($i / $grid-columns * 100%);
      max-width: calc($i / $grid-columns * 100%);
    }
  }
}

@media (min-width: variables.$lg) {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      flex-basis: calc($i / $grid-columns * 100%);
      max-width: calc($i / $grid-columns * 100%);
    }
  }
}

@supports (display: grid) {
  .grid {
    display: grid;
    grid-template-columns: repeat($grid-columns, 1fr);
    grid-template-rows: auto;
    > [class*="col-"] {
      margin: 0;
      max-width: 100%;
    }
  }

  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      grid-column-start: span #{$i};
      grid-column-end: span #{$i};
    }
  }

  @media(min-width: variables.$sm) {
    @for $i from 1 through $grid-columns {
      .col-sm-#{$i} {
        grid-column-start: span #{$i};
        grid-column-end: span #{$i};
      }
    }
  }

  @media(min-width: variables.$md) {
    @for $i from 1 through $grid-columns {
      .col-md-#{$i} {
        grid-column-start: span #{$i};
        grid-column-end: span #{$i};
      }
    }
  }

  @media(min-width: variables.$lg) {
    @for $i from 1 through $grid-columns {
      .col-lg-#{$i} {
        grid-column-start: span #{$i};
        grid-column-end: span #{$i};
      }
    }
  }
}
